/* creates a single linked unsorted list */

class Linked_List_Unordered{

public:

    struct Node{
        
        int data;
        Node* next;
        
        Node(int value){
            data = value;
            next = NULL;
        };
        
        ~Node(){
            cout << "this node with value " << data << " has been deleted" << endl;
        };
    };
    
    Node* head;
    Node* tail;
    
    Linked_List_Unordered(){
        head = NULL;
        tail = NULL;
    };
    
    ~Linked_List_Unordered(){
        cout << " This list has been deleted" << endl;
    };
    
    
    void insert(int value){
        Node* new1 = new Node(value);
        if(head == NULL){
            head = new1;
            tail = new1;
        }
        else{
            Node* current = head;
            while(current -> next != NULL){
                current = current -> next;
            };
            current -> next = new1;
            tail = new1;
        };
    };
    
    bool find(int value){
        Node* current = head;
        while (current-> next !=NULL && current -> data != value){
            current = current -> next;
        };
        if(current -> data == value){
            return true;
        }
        else{
            return false;
        };
    };
    
    void remove(int value){
        Node* prev = head;
        if (prev-> data == value){
            head = prev-> next;
            delete prev;
        }
        else if (prev-> next == NULL){
            cout << "This value is not in the list" << endl;
        }
        else{
            Node* current = prev-> next;
            while(current -> next != NULL && current-> data != value){
                prev = current;
                current = prev-> next;
            };
            if (current-> data == value && current -> next != NULL){
                prev-> next = current -> next;
                delete current;
            }
            else if (current -> data == value && current -> next == NULL){
                prev-> next = NULL;
                delete current;
            }
            else{
                cout << "This value is not in the list." << endl;
            };
        };
    };
    
    void show(){
        Node* current = head;
        while (current -> next != NULL){
            cout << current-> data << endl;
            current = current -> next;
        };
        cout << current -> data << endl;
    };
};
